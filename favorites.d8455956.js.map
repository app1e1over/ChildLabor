{"mappings":"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","sources":["src/partials/Favorites/Favorites.js","src/partials/FavoritesFilter/FavoritesFilter.js","src/favorites.js"],"sourcesContent":["import axios from \"axios\";\nimport { DrawCard } from \"../RecepieCards/RecepieCards.js\"\nimport { createPagination } from \"../Pagination/Pagination.js\"\n\n\nconst FAV_KEY = 'Favorites';\nconst favoritesList = document.querySelector('.favorites-list');\nconst favoritesPlug = document.querySelector('.favorites-plug');\nconst favTestElem = document.querySelector('.test-cards');\nconst favImgElem = document.querySelector('.fav-picture-thumb');\n\n\n// ПРОСТО ВИСИТЬ В КОДІ І ЧЕКАЄ ПУСТИЙ ЛОКАЛ СТОРЕДЖ\n// запускається, коли користувач сидів в обраних і повидаляв усі рецепти\nexport function hadleAllFavoritesDeleted() {\n    if (!favoritesArr.length) {\n        UpdateFavorites({page: 1});\n    }\n\n}\n\n// функція UpdateFavorites():\n// бере інф з ЛС, де зберіг. [ { }-ів ] з рецептами за кл. сл. 'Favorites'\n// 1. якщо ЛС пустий: рендер заглушки, ретьорн\n// 2. якщо вибрані всі категорії - рендер розмітки всього масиву\n// 3. якщо одна категорія - filter, для кожного рецепта виклик DrawCard\n// 3. innerHTML = renderedCards\n\n\n// функція UpdateFavorites():\n// бере інф з ЛС, де зберіг. [ { }-ів ] з рецептами за кл. сл. 'Favorites'\n// 1. якщо ЛС пустий: рендер заглушки, ретьорн\n// 2. якщо вибрані всі категорії - рендер розмітки всього масиву\n// 3. якщо одна категорія - filter, для кожного рецепта виклик DrawCard\n// 3. innerHTML = renderedCards\n\n// let pageIndex = 1;\nconst cardsPerPage = 12;\nexport function StartFavorites(){\n    let favoritesArr = JSON.parse(localStorage.getItem(FAV_KEY));\n    let pageCount = Math.ceil(favoritesArr.length / cardsPerPage);\n    UpdateFavorites({page: 1})\n    \n    if (favoritesArr.length > cardsPerPage) {\n    createPagination(pageCount, 1, UpdateFavorites);\n    }\n}\n// ВИКЛИКАЄТЬСЯ ПРИ СТАРТІ\nexport function UpdateFavorites({ page }) {\n    favoritesList.innerHTML = '';\n    favoritesPlug.classList.add('is-hidden');\n    favImgElem.classList.remove('is-hidden');\n\n    let favoritesArr = JSON.parse(localStorage.getItem(FAV_KEY));\n    //console.log(favoritesArr);\n    //console.log(favoritesArr.length);\n\n\n    if (!favoritesArr.length) {\n\n        favoritesPlug.classList.remove('is-hidden');\n        if (window.matchMedia(\"(max-width: 767px)\").matches) {\n            favImgElem.classList.add('is-hidden');\n        }\n        return;\n    }\n    \n    let start = (page * cardsPerPage - cardsPerPage) + 1;\n    let end = page * cardsPerPage;\n\n    renderFavorites(favoritesArr, start, end);\n}\n\n\n// ця не викликається при старті, її імпортне собі Віталій\nexport function showByCategory(category) {\n    favoritesList.innerHTML = '';\n    const selectedCategory = category;\n    // const selectedCategory = document.querySelector('.active').dataset.id;\n    // const selectedCategory = \"Dessert\"; це була заглушка\n\n    if (selectedCategory === \"All\") {\n        renderFavorites(favoritesArr);\n    } else {\n    const filteredFavorites = favoritesArr.filter(\n        recipe => recipe.category === selectedCategory\n    );\n    // console.log(filteredFavorites);\n    renderFavorites(filteredFavorites);\n    }\n}\n\n//РЕНДЕР РОЗМІТКИ ВСІХ УЛЮБЕНИХ РЕЦЕПТІВ \n\n// let start = (pageIndex * cardsPerPage - cardsPerPage) + 1;\n// let end = pageIndex * cardsPerPage;\n\nexport function renderFavorites(data, start, end) {\n    for (let i = start; i <= end; i += 1 ){\n        favoritesList.append(DrawCard(data[i]));\n    }\n}\n\n\n//console.log(UpdateFavorites());\n//UpdateFavorites();\n","import { showByCategory } from '../Favorites/Favorites.js';\n\nconst cont = document.querySelector('.recipe-container');\nconst filterBar = document.querySelector('.filters-list');\nconst favoritesList = document.querySelector('.favorites-container');\nconst FAV_KEY = 'Favorites';\nconst liked = JSON.parse(localStorage.getItem(FAV_KEY)) || [];\n\n//  --------------------Copied-------------\nexport function onCardClick(recepies) {\n  cont.addEventListener('click', event => {\n    if (event.target.nodeName != 'svg' && event.target.nodeName != 'path')\n      return;\n    setFavorite(event.target, recepies);\n  });\n}\n\n//   --------------------Copied-------------\nonClickFav(liked);\nfunction onClickFav(recepies) {\n  favoritesList.addEventListener('click', event => {\n    if (event.target.nodeName != 'svg' && event.target.nodeName != 'path')\n      return;\n    setFavorite(event.target, recepies);\n    updateFilterBar();\n    if (!liked || !liked.length) {\n      favoritesList.innerHTML = '';\n    }\n  });\n}\n\n//   --------------------Copied-------------\nfunction setFavorite(heart, parseInfo) {\n  let heartId = heart.closest('.recipe-card-container').dataset.recipe;\n  let id = JSON.parse(localStorage.getItem('id')) || [];\n  if (heart.closest('.heart-button').classList.contains('add')) {\n    const allCards = document.querySelectorAll('.recipe-card-container');\n    allCards.forEach(card => {\n      id.forEach(id => {\n        if (card.dataset.recipe == id) {\n          heart.closest('.heart-button').classList.remove('add');\n        }\n      });\n    });\n    id = id.filter(num => num != heartId);\n    localStorage.setItem('id', JSON.stringify(id));\n    liked = liked.filter(item => item._id != heartId);\n    console.log('delete');\n  } else {\n    parseInfo.forEach((card, idx) => {\n      if (card._id == heartId) {\n        liked.push(parseInfo[idx]);\n        id.push(heartId);\n      }\n      localStorage.setItem('id', JSON.stringify(id));\n      heart.closest('.heart-button').classList.add('add');\n    });\n    console.log('add');\n  }\n  localStorage.setItem(FAV_KEY, JSON.stringify(liked));\n  updateHearts();\n}\n\n// updateHearts();\n// updateFilterBar();\n\n//   --------------------Copied-------------\nexport function updateHearts() {\n  const allCards = document.querySelectorAll('.recipe-card-container');\n  let id = JSON.parse(localStorage.getItem('id'));\n  if (id) {\n    allCards.forEach(card => {\n      id.forEach(id => {\n        if (card.dataset.recipe == id) {\n          card.querySelector('.heart-button').classList.add('add');\n        }\n      });\n    });\n  }\n}\n\n//   --------------------Copied-------------\nexport function updateFilterBar() {\n  if (!liked || !liked.length) {\n    filterBar.innerHTML = '';\n  } else {\n    filterBar.innerHTML = `<li><button class=\"filters-btn\" type=\"button\" data-id=\"All\">All categories</button></li>`;\n    createFilters(liked);\n    filterBar.insertAdjacentHTML('beforeend', createFilters(liked));\n  }\n  const btnActive = localStorage.getItem('btn-active');\n  if (btnActive) {\n    const allBtns = document.querySelectorAll('.filters-btn');\n    allBtns.forEach(btn => {\n      if (btn.dataset.id == btnActive) {\n        showByCategory(btn);\n        setActive(btn);\n        updateHearts();\n      }\n    });\n  }\n}\n\n//   --------------------Copied-------------\nfunction createFilters(liked) {\n  const filterArr = liked\n    .map(({ category }) => category)\n    .filter((name, idx, arr) => arr.indexOf(name) === idx)\n    .sort();\n  return filterArr\n    .map(\n      name =>\n        `<li><button class=\"filters-btn\" type=\"button\" data-id=\"${name}\">${name}</button></li>`\n    )\n    .join('');\n}\n\n//   --------------------Copied-------------\nlet isDragging = false;\n\nfilterBar.addEventListener('mousemove', onDrag);\nfilterBar.addEventListener('mousedown', dragStart);\ndocument.addEventListener('mouseup', dragStop);\n\nfunction dragStop() {\n  isDragging = false;\n}\nfunction dragStart() {\n  isDragging = true;\n}\nfunction onDrag(e) {\n  if (!isDragging) return;\n  filterBar.scrollLeft -= e.movementX;\n}\n\n//   --------------------Copied-------------\nfilterBar.addEventListener('click', onClick);\nfunction onClick(evt) {\n  if (evt.target.nodeName != 'BUTTON') return;\n  setActive(evt.target);\n  showByCategory(evt.target);\n  updateHearts();\n}\n\n//   --------------------Copied-------------\nfunction setActive(btn) {\n  const allBtns = document.querySelectorAll('.filters-btn');\n  allBtns.forEach(btn => btn.classList.remove('active'));\n  btn.classList.add('active');\n  localStorage.setItem('btn-active', btn.dataset.recipe);\n}\n\n// -------------код Дарини\n// import axios from 'axios';\n\n// import axios from 'axios';\n// import { DrawCard } from '../RecepieCards/RecepieCards.js';\n// import { createPagination } from '../Pagination/Pagination.js';\n\n// // const FAV_KEY = 'Favorites';\n// const favoritesList = document.querySelector('.favorites-list');\n// const favoritesPlug = document.querySelector('.favorites-plug');\n// const favTestElem = document.querySelector('.test-cards');\n// const heartButtonElem = document.querySelector('.heart-button');\n\n//ПОТІМ ВИДАЛИТИ - запит на сервер по всіх рецептах\n//і заповнення тестової розмітки, щоб побачити кнопку сердечко\n// const getData = () =>\n//   axios.get(`https://tasty-treats-backend.p.goit.global/api/recipes`);\n// getData()\n//   .then(({ data }) => {\n//     console.log(data);\n//     renderRecepieCard(data);\n//   })\n//   .catch(console.warn);\n\n//ПОТІМ ВИДАЛИТИ - імітація - рендер розмітки всіх карток\n// function renderRecepieCard(data) {\n//   const cardsArr = data.results;\n\n//   const markup = cardsArr.map(card => DrowCard(card)).join('');\n\n//   favTestElem.innerHTML = markup;\n\n//   localStorage.setItem(FAV_KEY, JSON.stringify(cardsArr));\n// }\n\n//ПОТІМ ВИДАЛИТИ - рендер розмітки одної картки\n// function DrowCard(card) {\n//   return `\n// <div class=\"recepie-card\">\n//     <img src=\"${card.preview}\" alt=\"${card.tags}\" loading=\"lazy\" />\n//     <div class=\"recepie-info\">\n//     <button type=\"button\" class=\"heart-button\" id=\"${card.id}\">press heart</button>\n//     <h3>${card.title}</h3>\n//     <p>${card.description}</p>\n//     </div>\n// </div>\n//     `;\n// }\n\n//ПОТІМ ВИДАЛИТИ - метод addToFavorites, який додає в обрані:\n// 1. додає рецепт в ЛС (пушить в масив);\n// 2. міняє колір сердечка;\n// 3. не викликає UpdateFavorites, а DrowCard, <> insertAdjasentHTML(beforeend, newCard)\n// function addToFavorites() {\n//     heartButtonElem.classList.add('is-favorite');\n\n//     const selectadRecepie = heartButtonElem.parentNode;\n//     console.log(selectadRecepie);\n// }\n\n//ПОТІМ ВИДАЛИТИ - метод removeFromFavorites, який видаляє з обраних:\n// 1. видаляє рецепт з ЛС;\n// 2. міняє колір сердечка;\n// 3. викликає UpdateFavorites\n\n// ПОТІМ ВИДАЛИТИ - слухач для сердечок\n// document.querySelector('body').addEventListener('click', (event) => {\n//     if (event.target.nodeName !== \"BUTTON\") {\n//     return;\n//   }\n//     if (!heartButtonElem.classList.contains('is-favorite')) {\n//         addToFavorites()\n//     } else {\n//         console.warn();\n//     }\n// })\n\n// ПРОСТО ВИСИТЬ В КОДІ І ЧЕКАЄ ПУСТИЙ ЛОКАЛ СТОРЕДЖ\n// запускається, коли користувач сидів в обраних і повидаляв усі рецепти\n// export function hadleAllFavoritesDeleted() {\n//   if (!favoritesArr.length) {\n//     UpdateFavorites({ page: 1 });\n//   }\n// }\n\n// функція UpdateFavorites():\n// 1. бере інф з ЛС, де зберіг. [ { }-ів ] з рецептами за кл. сл. 'Favorites'\n// 1.1. якщо ЛС пустий: рендер заглушки, ретьорн\n// 2. filter, для кожного рецепта виклик DrowCard\n// 3. innerHTML = renderedCards\n// const selectedCategory = 'Beef';\n\n// function UpdateFavorites() {\n//   let favoritesArr = JSON.parse(localStorage.getItem(FAV_KEY));\n//   console.log(favoritesArr);\n\n//   if (!favoritesArr.length) {\n//     favoritesPlug.classList.remove('is-hidden');\n//     return;\n//   }\n\n//   const filteredFavorites = favoritesArr.filter(\n//     recepie => recepie.category === selectedCategory\n//   );\n//   // let pageIndex = 1;\n// const cardsPerPage = 12;\n// export function StartFavorites() {\n//   let favoritesArr = JSON.parse(localStorage.getItem(FAV_KEY));\n//   let pageCount = Math.ceil(favoritesArr.length / cardsPerPage);\n//   UpdateFavorites({ page: 1 });\n\n//   createPagination(pageCount, 1, UpdateFavorites);\n// }\n\n// ВИКЛИКАЄТЬСЯ ПРИ СТАРТІ\n// export function UpdateFavorites({ page }) {\n//   favoritesList.innerHTML = '';\n//   favoritesPlug.classList.add('is-hidden');\n//   favImgElem.classList.remove('is-hidden');\n\n//   let favoritesArr = JSON.parse(localStorage.getItem(FAV_KEY));\n//   console.log(favoritesArr);\n//   console.log(favoritesArr.length);\n\n//   if (!favoritesArr.length) {\n//     favoritesPlug.classList.remove('is-hidden');\n//     if (window.matchMedia('(max-width: 767px)').matches) {\n//       favImgElem.classList.add('is-hidden');\n//     }\n//     return;\n//   }\n\n//   let start = page * cardsPerPage - cardsPerPage + 1;\n//   let end = page * cardsPerPage;\n\n//   renderFavorites(favoritesArr, start, end);\n// }\n\n// ця не викликається при старті, її імпортне собі Віталій\n// export function showByCategory(category) {\n// favoritesList.innerHTML = '';\n// const selectedCategory = category;\n// const selectedCategory = document.querySelector('.active').dataset.id;\n// const selectedCategory = \"Dessert\"; це була заглушка\n\n// if (selectedCategory === 'All') {\n//   renderFavorites(favoritesArr);\n// } else {\n//   const filteredFavorites = favoritesArr.filter(\n//     recipe => recipe.category === selectedCategory\n//   );\n//   console.log(filteredFavorites);\n\n//   renderFavorites(filteredFavorites);\n// }\n\n//ПОТІМ ВИДАЛИТИ - рендер розмітки всіх улюблених рецептів\n//   function renderFavorites(data) {\n//     const markup = data.map(card => DrowCard(card)).join('');\n//     favoritesList.innerHTML = markup;\n//   }\n\n//   UpdateFavorites();\n// }\n\n//РЕНДЕР РОЗМІТКИ ВСІХ УЛЮБЕНИХ РЕЦЕПТІВ\n// let start = (pageIndex * cardsPerPage - cardsPerPage) + 1;\n// let end = pageIndex * cardsPerPage;\n\n// export function renderFavorites(data, start, end) {\n//   for (let i = start; i <= end; i += 1) {\n//     favoritesList.append(DrawCard(data[i]));\n//   }\n// }\n\n//console.log(UpdateFavorites());\n//UpdateFavorites();\n","import {StartFavorites} from \"./partials/Favorites/Favorites.js\";\nimport { startHeader } from \"./partials/Header/Header.js\";\nimport { StartScrollUp } from \"./partials/ScrollUp/ScrollUp.js\";\nimport { updateHearts } from \"./partials/FavoritesFilter/FavoritesFilter.js\";\n\nStartScrollUp();\nstartHeader();\ntry{\nStartFavorites();}\ncatch{\n    \n}\nupdateHearts();"],"names":["$7b694fab0baf01ba$var$favoritesList","document","querySelector","$7b694fab0baf01ba$var$favoritesPlug","$7b694fab0baf01ba$var$favImgElem","$7b694fab0baf01ba$export$5312ec80869db145","page","innerHTML","classList","add","remove","favoritesArr","JSON","parse","localStorage","getItem","length","window","matchMedia","matches","$7b694fab0baf01ba$export$56ea5d4c2d828e2e","$7b694fab0baf01ba$export$fb68416606e95152","category","selectedCategory","filter","recipe","data","start","end","i","append","$ioLrG","DrawCard","$64f36a1b6088e260$var$filterBar","$64f36a1b6088e260$var$favoritesList","$64f36a1b6088e260$var$liked","recepies","$64f36a1b6088e260$var$setFavorite","heart","parseInfo","heartId","closest","dataset","id1","contains","querySelectorAll","forEach","card","id","num","setItem","stringify","item","_id","console","log","idx","push","$64f36a1b6088e260$export$c2175f1faf514491","allCards","id2","$64f36a1b6088e260$var$createFilters","liked1","map","name","arr","indexOf","sort","join","addEventListener","event","target","nodeName","insertAdjacentHTML","btnActive","btn","$64f36a1b6088e260$var$setActive","$64f36a1b6088e260$export$94f31709e5c6a527","$64f36a1b6088e260$var$isDragging","btn1","e","scrollLeft","movementX","evt","$7O1Fl","StartScrollUp","$13v5H","startHeader","pageCount","Math","ceil","$8IduK","createPagination"],"version":3,"file":"favorites.d8455956.js.map"}