{"mappings":"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","sources":["src/partials/FavoritesFilter/FavoritesFilter.js","src/partials/Favorites/Favorites.js","src/favorites.js"],"sourcesContent":["import { showByCategory } from '../Favorites/Favorites.js';\n\nconst cont = document.querySelector('.recipe-container');\nconst filterBar = document.querySelector('.filters-list');\nconst favoritesList = document.querySelector('.favorites-list');\nconst FAV_KEY = 'Favorites';\nconst liked = JSON.parse(localStorage.getItem(FAV_KEY)) || [];\n\n//  --------------------Copied-------------\nexport function onCardClick(recepies) {\n  cont.addEventListener('click', event => {\n    if (event.target.nodeName != 'svg' && event.target.nodeName != 'path')\n      return;\n    setFavorite(event.target, recepies);\n  });\n}\n\n//   --------------------Copied-------------\n// onClickFav(liked);\n// function onClickFav(recepies) {\n//   favoritesList.addEventListener('click', event => {\n//     if (event.target.nodeName != 'svg' && event.target.nodeName != 'path')\n//       return;\n//     setFavorite(event.target, recepies);\n//     updateFilterBar();\n//     if (!liked || !liked.length) {\n//       favoritesList.innerHTML = '';\n//     }\n//   });\n// }\n\n//   --------------------Copied-------------\nfunction setFavorite(heart, parseInfo) {\n  let heartId = heart.closest('.recipe-card-container').dataset.recipe;\n  let id = JSON.parse(localStorage.getItem('id')) || [];\n  if (heart.closest('.heart-button').classList.contains('add')) {\n    const allCards = document.querySelectorAll('.recipe-card-container');\n    allCards.forEach(card => {\n      id.forEach(id => {\n        if (card.dataset.recipe == id) {\n          heart.closest('.heart-button').classList.remove('add');\n        }\n      });\n    });\n    id = id.filter(num => num != heartId);\n    localStorage.setItem('id', JSON.stringify(id));\n    liked = liked.filter(item => item._id != heartId);\n    console.log('delete');\n  } else {\n    parseInfo.forEach((card, idx) => {\n      if (card._id == heartId) {\n        liked.push(parseInfo[idx]);\n        id.push(heartId);\n      }\n      localStorage.setItem('id', JSON.stringify(id));\n      heart.closest('.heart-button').classList.add('add');\n    });\n    console.log('add');\n  }\n  localStorage.setItem(FAV_KEY, JSON.stringify(liked));\n  updateHearts();\n}\nconsole.log(localStorage.getItem('btn-active'));\n// updateHearts();\nupdateFilterBar();\n\n//   --------------------Copied-------------\nexport function updateHearts() {\n  const allCards = document.querySelectorAll('.recipe-card-container');\n  let id = JSON.parse(localStorage.getItem('id'));\n  if (id) {\n    allCards.forEach(card => {\n      id.forEach(id => {\n        if (card.dataset.recipe == id) {\n          card.querySelector('.heart-button').classList.add('add');\n        }\n      });\n    });\n  }\n}\n\n//   --------------------Copied-------------\nexport function updateFilterBar() {\n  console.log(liked);\n  if (!liked || !liked.length) {\n    filterBar.innerHTML = '';\n  } else {\n    filterBar.innerHTML = `<li><button class=\"filters-btn\" type=\"button\" data-id=\"All\">All categories</button></li>`;\n    createFilters(liked);\n    filterBar.insertAdjacentHTML('beforeend', createFilters(liked));\n  }\n  const btnActive = localStorage.getItem('btn-active');\n  if (btnActive) {\n    const allBtns = document.querySelectorAll('.filters-btn');\n    allBtns.forEach(btn => {\n      if (btn.dataset.id == btnActive) {\n        showByCategory(btn);\n        setActive(btn);\n        updateHearts();\n      }\n    });\n  }\n}\n\n//   --------------------Copied-------------\nfunction createFilters(liked) {\n  const filterArr = liked\n    .map(({ category }) => category)\n    .filter((name, idx, arr) => arr.indexOf(name) === idx)\n    .sort();\n  return filterArr\n    .map(\n      name =>\n        `<li><button class=\"filters-btn\" type=\"button\" data-id=\"${name}\">${name}</button></li>`\n    )\n    .join('');\n}\n\n//   --------------------Copied-------------\nlet isDragging = false;\n\nfilterBar.addEventListener('mousemove', onDrag);\nfilterBar.addEventListener('mousedown', dragStart);\ndocument.addEventListener('mouseup', dragStop);\n\nfunction dragStop() {\n  isDragging = false;\n}\nfunction dragStart() {\n  isDragging = true;\n}\nfunction onDrag(e) {\n  if (!isDragging) return;\n  filterBar.scrollLeft -= e.movementX;\n}\n\n//   --------------------Copied-------------\nfilterBar.addEventListener('click', onClick);\nfunction onClick(evt) {\n  console.log(evt.target);\n  if (evt.target.nodeName != 'BUTTON') return;\n  setActive(evt.target);\n  showByCategory(evt.target);\n  updateHearts();\n}\n\n//   --------------------Copied-------------\nfunction setActive(btn) {\n  const allBtns = document.querySelectorAll('.filters-btn');\n  allBtns.forEach(btn => btn.classList.remove('active'));\n  btn.classList.add('active');\n  localStorage.setItem('btn-active', btn.dataset.id);\n}\nconsole.log(localStorage.getItem('btn-active'));\n","import axios from \"axios\";\nimport { DrawCard } from \"../RecepieCards/RecepieCards.js\"\nimport { createPagination } from \"../Pagination/Pagination.js\"\nimport { updateFilterBar } from \"../FavoritesFilter/FavoritesFilter.js\";\n\nconst FAV_KEY = 'Favorites';\nconst favoritesList = document.querySelector('.favorites-list');\nconst favoritesPlug = document.querySelector('.favorites-plug');\nconst favTestElem = document.querySelector('.test-cards');\nconst favImgElem = document.querySelector('.fav-picture-thumb');\n\n\n// ПРОСТО ВИСИТЬ В КОДІ І ЧЕКАЄ ПУСТИЙ ЛОКАЛ СТОРЕДЖ\n// запускається, коли користувач сидів в обраних і повидаляв усі рецепти\nexport function hadleAllFavoritesDeleted() {\n    if (!favoritesArr.length) {\n        UpdateFavorites({page: 1});\n    }\n\n}\n\n// функція UpdateFavorites():\n// бере інф з ЛС, де зберіг. [ { }-ів ] з рецептами за кл. сл. 'Favorites'\n// 1. якщо ЛС пустий: рендер заглушки, ретьорн\n// 2. якщо вибрані всі категорії - рендер розмітки всього масиву\n// 3. якщо одна категорія - filter, для кожного рецепта виклик DrawCard\n// 3. innerHTML = renderedCards\n\n\n// функція UpdateFavorites():\n// бере інф з ЛС, де зберіг. [ { }-ів ] з рецептами за кл. сл. 'Favorites'\n// 1. якщо ЛС пустий: рендер заглушки, ретьорн\n// 2. якщо вибрані всі категорії - рендер розмітки всього масиву\n// 3. якщо одна категорія - filter, для кожного рецепта виклик DrawCard\n// 3. innerHTML = renderedCards\n\n// let pageIndex = 1;\nconst cardsPerPage = 12;\nexport function StartFavorites(){\n    let favoritesArr = JSON.parse(localStorage.getItem(FAV_KEY));\n    let pageCount = Math.ceil(favoritesArr.length / cardsPerPage);\n    UpdateFavorites({page: 1})\n    \n    if (favoritesArr.length > cardsPerPage) {\n    createPagination(pageCount, 1, UpdateFavorites);\n    }\n}\n// ВИКЛИКАЄТЬСЯ ПРИ СТАРТІ\nexport function UpdateFavorites({ page }) {\n    favoritesList.innerHTML = '';\n    favoritesPlug.classList.add('is-hidden');\n    favImgElem.classList.remove('is-hidden');\n\n    let favoritesArr = JSON.parse(localStorage.getItem(FAV_KEY));\n    //console.log(favoritesArr);\n    //console.log(favoritesArr.length);\n\n\n    if (!favoritesArr.length) {\n\n        favoritesPlug.classList.remove('is-hidden');\n        if (window.matchMedia(\"(max-width: 767px)\").matches) {\n            favImgElem.classList.add('is-hidden');\n        }\n        return;\n    }\n    \n    let start = (page * cardsPerPage - cardsPerPage);\n    let end = page * cardsPerPage;\n    updateFilterBar();\n\n    renderFavorites(favoritesArr, start, end);\n}\n\n\n// ця не викликається при старті, її імпортне собі Віталій\nexport function showByCategory(category) {\n    let favoritesArr = JSON.parse(localStorage.getItem(FAV_KEY));\n    favoritesList.innerHTML = '';\n    const selectedCategory = category;\n    // const selectedCategory = document.querySelector('.active').dataset.id;\n    // const selectedCategory = \"Dessert\"; це була заглушка\n\n    if (selectedCategory === \"All\") {\n        renderFavorites(favoritesArr, start, end);\n    } else {\n    const filteredFavorites = favoritesArr.filter(\n        recipe => recipe.category.trim().toLowerCase() === selectedCategory.dataset.id.trim().toLowerCase() || selectedCategory.dataset.id == \"All\"\n    );\n    // console.log(filteredFavorites);\n    let page = 1;\n    let start = (page * cardsPerPage - cardsPerPage);\n    let end = page * cardsPerPage;\n        \n    renderFavorites(filteredFavorites, start, end);\n    }\n}\n\n//РЕНДЕР РОЗМІТКИ ВСІХ УЛЮБЕНИХ РЕЦЕПТІВ \n\n// let start = (pageIndex * cardsPerPage - cardsPerPage) + 1;\n// let end = pageIndex * cardsPerPage;\n\nexport function renderFavorites(data, start, end) {\n    for (let i = start; i <= end && i < data.length; i += 1 ){\n        favoritesList.append(DrawCard(data[i]));\n    }\n}\n\n\n//console.log(UpdateFavorites());\n//UpdateFavorites();\n","import { StartFavorites } from './partials/Favorites/Favorites.js';\nimport { startHeader } from './partials/Header/Header.js';\nimport { StartScrollUp } from './partials/ScrollUp/ScrollUp.js';\nimport { updateHearts } from './partials/FavoritesFilter/FavoritesFilter.js';\n//import 'normalize.css';\n\n\n\nStartScrollUp();\n\ntry {\n  startHeader();\n} catch (er) {\n  console.log(er);\n}\n\ntry {\n  StartFavorites();\n} catch (er) {\n  console.log(er);\n}\n\nupdateHearts();\n"],"names":["$5d2a3849b3289400$var$filterBar","document","querySelector","$5d2a3849b3289400$var$FAV_KEY","$5d2a3849b3289400$var$liked","JSON","parse","localStorage","getItem","$5d2a3849b3289400$export$c2175f1faf514491","allCards","querySelectorAll","id2","forEach","card","id","dataset","recipe","classList","add","$5d2a3849b3289400$export$94f31709e5c6a527","console","log","length","innerHTML","$5d2a3849b3289400$var$createFilters","insertAdjacentHTML","btnActive","btn","$1c0b26b5b4577cbc$export$fb68416606e95152","$5d2a3849b3289400$var$setActive","liked1","map","param","category","filter","name","idx","arr","indexOf","sort","concat","join","$5d2a3849b3289400$var$isDragging","btn1","remove","setItem","addEventListener","e","scrollLeft","movementX","evt","target","nodeName","$1c0b26b5b4577cbc$var$FAV_KEY","$1c0b26b5b4577cbc$var$favoritesList","$1c0b26b5b4577cbc$var$favoritesPlug","$1c0b26b5b4577cbc$var$favImgElem","$1c0b26b5b4577cbc$var$cardsPerPage","$1c0b26b5b4577cbc$export$5312ec80869db145","page","favoritesArr","window","matchMedia","matches","start","end","$1c0b26b5b4577cbc$export$56ea5d4c2d828e2e","selectedCategory","trim","toLowerCase","data","i","append","$3gRQg","DrawCard","StartScrollUp","$hpusp","startHeader","er","pageCount","Math","ceil","$7foJP","createPagination","er1"],"version":3,"file":"favorites.aebbd4e6.js.map"}