{"mappings":"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","sources":["src/partials/FavoritesFilter/FavoritesFilter.js","src/partials/Favorites/Favorites.js","src/favorites.js"],"sourcesContent":["import { showByCategory } from '../Favorites/Favorites.js';\n\nconst cont = document.querySelector('.recipe-container');\nconst filterBar = document.querySelector('.filters-list');\nconst favoritesList = document.querySelector('.favorites-container');\nconst FAV_KEY = 'Favorites';\nconst liked = JSON.parse(localStorage.getItem(FAV_KEY)) || [];\n\n//  --------------------Copied-------------\nexport function onCardClick(recepies) {\n  cont.addEventListener('click', event => {\n    if (event.target.nodeName != 'svg' && event.target.nodeName != 'path')\n      return;\n    setFavorite(event.target, recepies);\n  });\n}\n\n//   --------------------Copied-------------\n// onClickFav(liked);\n// function onClickFav(recepies) {\n//   favoritesList.addEventListener('click', event => {\n//     if (event.target.nodeName != 'svg' && event.target.nodeName != 'path')\n//       return;\n//     setFavorite(event.target, recepies);\n//     updateFilterBar();\n//     if (!liked || !liked.length) {\n//       favoritesList.innerHTML = '';\n//     }\n//   });\n// }\n\n//   --------------------Copied-------------\nfunction setFavorite(heart, parseInfo) {\n  let heartId = heart.closest('.recipe-card-container').dataset.recipe;\n  let id = JSON.parse(localStorage.getItem('id')) || [];\n  if (heart.closest('.heart-button').classList.contains('add')) {\n    const allCards = document.querySelectorAll('.recipe-card-container');\n    allCards.forEach(card => {\n      id.forEach(id => {\n        if (card.dataset.recipe == id) {\n          heart.closest('.heart-button').classList.remove('add');\n        }\n      });\n    });\n    id = id.filter(num => num != heartId);\n    localStorage.setItem('id', JSON.stringify(id));\n    liked = liked.filter(item => item._id != heartId);\n    console.log('delete');\n  } else {\n    parseInfo.forEach((card, idx) => {\n      if (card._id == heartId) {\n        liked.push(parseInfo[idx]);\n        id.push(heartId);\n      }\n      localStorage.setItem('id', JSON.stringify(id));\n      heart.closest('.heart-button').classList.add('add');\n    });\n    console.log('add');\n  }\n  localStorage.setItem(FAV_KEY, JSON.stringify(liked));\n  updateHearts();\n}\n\n// updateHearts();\n// updateFilterBar();\n\n//   --------------------Copied-------------\nexport function updateHearts() {\n  const allCards = document.querySelectorAll('.recipe-card-container');\n  let id = JSON.parse(localStorage.getItem('id'));\n  if (id) {\n    allCards.forEach(card => {\n      id.forEach(id => {\n        if (card.dataset.recipe == id) {\n          card.querySelector('.heart-button').classList.add('add');\n        }\n      });\n    });\n  }\n}\n\n//   --------------------Copied-------------\nexport function updateFilterBar() {\n  console.log(liked);\n  if (!liked || !liked.length) {\n    filterBar.innerHTML = '';\n  } else {\n    filterBar.innerHTML = `<li><button class=\"filters-btn\" type=\"button\" data-id=\"All\">All categories</button></li>`;\n    createFilters(liked);\n    filterBar.insertAdjacentHTML('beforeend', createFilters(liked));\n  }\n  const btnActive = localStorage.getItem('btn-active');\n  if (btnActive) {\n    const allBtns = document.querySelectorAll('.filters-btn');\n    allBtns.forEach(btn => {\n      if (btn.dataset.id == btnActive) {\n        showByCategory(btn);\n        setActive(btn);\n        updateHearts();\n      }\n    });\n  }\n}\n\n//   --------------------Copied-------------\nfunction createFilters(liked) {\n  const filterArr = liked\n    .map(({ category }) => category)\n    .filter((name, idx, arr) => arr.indexOf(name) === idx)\n    .sort();\n  return filterArr\n    .map(\n      name =>\n        `<li><button class=\"filters-btn\" type=\"button\" data-id=\"${name}\">${name}</button></li>`\n    )\n    .join('');\n}\n\n//   --------------------Copied-------------\nlet isDragging = false;\n\nfilterBar.addEventListener('mousemove', onDrag);\nfilterBar.addEventListener('mousedown', dragStart);\ndocument.addEventListener('mouseup', dragStop);\n\nfunction dragStop() {\n  isDragging = false;\n}\nfunction dragStart() {\n  isDragging = true;\n}\nfunction onDrag(e) {\n  if (!isDragging) return;\n  filterBar.scrollLeft -= e.movementX;\n}\n\n//   --------------------Copied-------------\nfilterBar.addEventListener('click', onClick);\nfunction onClick(evt) {\n  if (evt.target.nodeName != 'BUTTON') return;\n  setActive(evt.target);\n  showByCategory(evt.target);\n  updateHearts();\n}\n\n//   --------------------Copied-------------\nfunction setActive(btn) {\n  const allBtns = document.querySelectorAll('.filters-btn');\n  allBtns.forEach(btn => btn.classList.remove('active'));\n  btn.classList.add('active');\n  localStorage.setItem('btn-active', btn.dataset.recipe);\n}\n\n// -------------код Дарини\n// import axios from 'axios';\n\n// import axios from 'axios';\n// import { DrawCard } from '../RecepieCards/RecepieCards.js';\n// import { createPagination } from '../Pagination/Pagination.js';\n\n// // const FAV_KEY = 'Favorites';\n// const favoritesList = document.querySelector('.favorites-list');\n// const favoritesPlug = document.querySelector('.favorites-plug');\n// const favTestElem = document.querySelector('.test-cards');\n// const heartButtonElem = document.querySelector('.heart-button');\n\n//ПОТІМ ВИДАЛИТИ - запит на сервер по всіх рецептах\n//і заповнення тестової розмітки, щоб побачити кнопку сердечко\n// const getData = () =>\n//   axios.get(`https://tasty-treats-backend.p.goit.global/api/recipes`);\n// getData()\n//   .then(({ data }) => {\n//     console.log(data);\n//     renderRecepieCard(data);\n//   })\n//   .catch(console.warn);\n\n//ПОТІМ ВИДАЛИТИ - імітація - рендер розмітки всіх карток\n// function renderRecepieCard(data) {\n//   const cardsArr = data.results;\n\n//   const markup = cardsArr.map(card => DrowCard(card)).join('');\n\n//   favTestElem.innerHTML = markup;\n\n//   localStorage.setItem(FAV_KEY, JSON.stringify(cardsArr));\n// }\n\n//ПОТІМ ВИДАЛИТИ - рендер розмітки одної картки\n// function DrowCard(card) {\n//   return `\n// <div class=\"recepie-card\">\n//     <img src=\"${card.preview}\" alt=\"${card.tags}\" loading=\"lazy\" />\n//     <div class=\"recepie-info\">\n//     <button type=\"button\" class=\"heart-button\" id=\"${card.id}\">press heart</button>\n//     <h3>${card.title}</h3>\n//     <p>${card.description}</p>\n//     </div>\n// </div>\n//     `;\n// }\n\n//ПОТІМ ВИДАЛИТИ - метод addToFavorites, який додає в обрані:\n// 1. додає рецепт в ЛС (пушить в масив);\n// 2. міняє колір сердечка;\n// 3. не викликає UpdateFavorites, а DrowCard, <> insertAdjasentHTML(beforeend, newCard)\n// function addToFavorites() {\n//     heartButtonElem.classList.add('is-favorite');\n\n//     const selectadRecepie = heartButtonElem.parentNode;\n//     console.log(selectadRecepie);\n// }\n\n//ПОТІМ ВИДАЛИТИ - метод removeFromFavorites, який видаляє з обраних:\n// 1. видаляє рецепт з ЛС;\n// 2. міняє колір сердечка;\n// 3. викликає UpdateFavorites\n\n// ПОТІМ ВИДАЛИТИ - слухач для сердечок\n// document.querySelector('body').addEventListener('click', (event) => {\n//     if (event.target.nodeName !== \"BUTTON\") {\n//     return;\n//   }\n//     if (!heartButtonElem.classList.contains('is-favorite')) {\n//         addToFavorites()\n//     } else {\n//         console.warn();\n//     }\n// })\n\n// ПРОСТО ВИСИТЬ В КОДІ І ЧЕКАЄ ПУСТИЙ ЛОКАЛ СТОРЕДЖ\n// запускається, коли користувач сидів в обраних і повидаляв усі рецепти\n// export function hadleAllFavoritesDeleted() {\n//   if (!favoritesArr.length) {\n//     UpdateFavorites({ page: 1 });\n//   }\n// }\n\n// функція UpdateFavorites():\n// 1. бере інф з ЛС, де зберіг. [ { }-ів ] з рецептами за кл. сл. 'Favorites'\n// 1.1. якщо ЛС пустий: рендер заглушки, ретьорн\n// 2. filter, для кожного рецепта виклик DrowCard\n// 3. innerHTML = renderedCards\n// const selectedCategory = 'Beef';\n\n// function UpdateFavorites() {\n//   let favoritesArr = JSON.parse(localStorage.getItem(FAV_KEY));\n//   console.log(favoritesArr);\n\n//   if (!favoritesArr.length) {\n//     favoritesPlug.classList.remove('is-hidden');\n//     return;\n//   }\n\n//   const filteredFavorites = favoritesArr.filter(\n//     recepie => recepie.category === selectedCategory\n//   );\n//   // let pageIndex = 1;\n// const cardsPerPage = 12;\n// export function StartFavorites() {\n//   let favoritesArr = JSON.parse(localStorage.getItem(FAV_KEY));\n//   let pageCount = Math.ceil(favoritesArr.length / cardsPerPage);\n//   UpdateFavorites({ page: 1 });\n\n//   createPagination(pageCount, 1, UpdateFavorites);\n// }\n\n// ВИКЛИКАЄТЬСЯ ПРИ СТАРТІ\n// export function UpdateFavorites({ page }) {\n//   favoritesList.innerHTML = '';\n//   favoritesPlug.classList.add('is-hidden');\n//   favImgElem.classList.remove('is-hidden');\n\n//   let favoritesArr = JSON.parse(localStorage.getItem(FAV_KEY));\n//   console.log(favoritesArr);\n//   console.log(favoritesArr.length);\n\n//   if (!favoritesArr.length) {\n//     favoritesPlug.classList.remove('is-hidden');\n//     if (window.matchMedia('(max-width: 767px)').matches) {\n//       favImgElem.classList.add('is-hidden');\n//     }\n//     return;\n//   }\n\n//   let start = page * cardsPerPage - cardsPerPage + 1;\n//   let end = page * cardsPerPage;\n\n//   renderFavorites(favoritesArr, start, end);\n// }\n\n// ця не викликається при старті, її імпортне собі Віталій\n// export function showByCategory(category) {\n// favoritesList.innerHTML = '';\n// const selectedCategory = category;\n// const selectedCategory = document.querySelector('.active').dataset.id;\n// const selectedCategory = \"Dessert\"; це була заглушка\n\n// if (selectedCategory === 'All') {\n//   renderFavorites(favoritesArr);\n// } else {\n//   const filteredFavorites = favoritesArr.filter(\n//     recipe => recipe.category === selectedCategory\n//   );\n//   console.log(filteredFavorites);\n\n//   renderFavorites(filteredFavorites);\n// }\n\n//ПОТІМ ВИДАЛИТИ - рендер розмітки всіх улюблених рецептів\n//   function renderFavorites(data) {\n//     const markup = data.map(card => DrowCard(card)).join('');\n//     favoritesList.innerHTML = markup;\n//   }\n\n//   UpdateFavorites();\n// }\n\n//РЕНДЕР РОЗМІТКИ ВСІХ УЛЮБЕНИХ РЕЦЕПТІВ\n// let start = (pageIndex * cardsPerPage - cardsPerPage) + 1;\n// let end = pageIndex * cardsPerPage;\n\n// export function renderFavorites(data, start, end) {\n//   for (let i = start; i <= end; i += 1) {\n//     favoritesList.append(DrawCard(data[i]));\n//   }\n// }\n\n//console.log(UpdateFavorites());\n//UpdateFavorites();\n","import axios from \"axios\";\nimport { DrawCard } from \"../RecepieCards/RecepieCards.js\"\nimport { createPagination } from \"../Pagination/Pagination.js\"\nimport { updateFilterBar } from \"../FavoritesFilter/FavoritesFilter.js\";\n\nconst FAV_KEY = 'Favorites';\nconst favoritesList = document.querySelector('.favorites-list');\nconst favoritesPlug = document.querySelector('.favorites-plug');\nconst favTestElem = document.querySelector('.test-cards');\nconst favImgElem = document.querySelector('.fav-picture-thumb');\n\n\n// ПРОСТО ВИСИТЬ В КОДІ І ЧЕКАЄ ПУСТИЙ ЛОКАЛ СТОРЕДЖ\n// запускається, коли користувач сидів в обраних і повидаляв усі рецепти\nexport function hadleAllFavoritesDeleted() {\n    if (!favoritesArr.length) {\n        UpdateFavorites({page: 1});\n    }\n\n}\n\n// функція UpdateFavorites():\n// бере інф з ЛС, де зберіг. [ { }-ів ] з рецептами за кл. сл. 'Favorites'\n// 1. якщо ЛС пустий: рендер заглушки, ретьорн\n// 2. якщо вибрані всі категорії - рендер розмітки всього масиву\n// 3. якщо одна категорія - filter, для кожного рецепта виклик DrawCard\n// 3. innerHTML = renderedCards\n\n\n// функція UpdateFavorites():\n// бере інф з ЛС, де зберіг. [ { }-ів ] з рецептами за кл. сл. 'Favorites'\n// 1. якщо ЛС пустий: рендер заглушки, ретьорн\n// 2. якщо вибрані всі категорії - рендер розмітки всього масиву\n// 3. якщо одна категорія - filter, для кожного рецепта виклик DrawCard\n// 3. innerHTML = renderedCards\n\n// let pageIndex = 1;\nconst cardsPerPage = 12;\nexport function StartFavorites(){\n    let favoritesArr = JSON.parse(localStorage.getItem(FAV_KEY));\n    let pageCount = Math.ceil(favoritesArr.length / cardsPerPage);\n    UpdateFavorites({page: 1})\n    \n    if (favoritesArr.length > cardsPerPage) {\n    createPagination(pageCount, 1, UpdateFavorites);\n    }\n}\n// ВИКЛИКАЄТЬСЯ ПРИ СТАРТІ\nexport function UpdateFavorites({ page }) {\n    favoritesList.innerHTML = '';\n    favoritesPlug.classList.add('is-hidden');\n    favImgElem.classList.remove('is-hidden');\n\n    let favoritesArr = JSON.parse(localStorage.getItem(FAV_KEY));\n    //console.log(favoritesArr);\n    //console.log(favoritesArr.length);\n\n\n    if (!favoritesArr.length) {\n\n        favoritesPlug.classList.remove('is-hidden');\n        if (window.matchMedia(\"(max-width: 767px)\").matches) {\n            favImgElem.classList.add('is-hidden');\n        }\n        return;\n    }\n    \n    let start = (page * cardsPerPage - cardsPerPage);\n    let end = page * cardsPerPage;\n    updateFilterBar();\n\n    renderFavorites(favoritesArr, start, end);\n}\n\n\n// ця не викликається при старті, її імпортне собі Віталій\nexport function showByCategory(category) {\n    let favoritesArr = JSON.parse(localStorage.getItem(FAV_KEY));\n    favoritesList.innerHTML = '';\n    const selectedCategory = category;\n    // const selectedCategory = document.querySelector('.active').dataset.id;\n    // const selectedCategory = \"Dessert\"; це була заглушка\n\n    if (selectedCategory === \"All\") {\n        renderFavorites(favoritesArr, start, end);\n    } else {\n    const filteredFavorites = favoritesArr.filter(\n        recipe => recipe.category.trim().toLowerCase() === selectedCategory.dataset.id.trim().toLowerCase() || selectedCategory.dataset.id == \"All\"\n    );\n    // console.log(filteredFavorites);\n    let page = 1;\n    let start = (page * cardsPerPage - cardsPerPage);\n    let end = page * cardsPerPage;\n        \n    renderFavorites(filteredFavorites, start, end);\n    }\n}\n\n//РЕНДЕР РОЗМІТКИ ВСІХ УЛЮБЕНИХ РЕЦЕПТІВ \n\n// let start = (pageIndex * cardsPerPage - cardsPerPage) + 1;\n// let end = pageIndex * cardsPerPage;\n\nexport function renderFavorites(data, start, end) {\n    for (let i = start; i <= end && i < data.length; i += 1 ){\n        favoritesList.append(DrawCard(data[i]));\n    }\n}\n\n\n//console.log(UpdateFavorites());\n//UpdateFavorites();\n","import {StartFavorites} from \"./partials/Favorites/Favorites.js\";\nimport { startHeader } from \"./partials/Header/Header.js\";\nimport { StartScrollUp } from \"./partials/ScrollUp/ScrollUp.js\";\nimport { updateHearts } from \"./partials/FavoritesFilter/FavoritesFilter.js\";\n\nStartScrollUp();\nstartHeader();\ntry{\nStartFavorites();}\ncatch{\n    \n}\nupdateHearts();"],"names":["document","querySelector","$64f36a1b6088e260$var$filterBar","$64f36a1b6088e260$var$liked","JSON","parse","localStorage","getItem","$64f36a1b6088e260$export$c2175f1faf514491","allCards","querySelectorAll","id2","forEach","card","id","dataset","recipe","classList","add","$64f36a1b6088e260$export$94f31709e5c6a527","console","log","length","innerHTML","$64f36a1b6088e260$var$createFilters","insertAdjacentHTML","btnActive","btn","$7b694fab0baf01ba$export$fb68416606e95152","$64f36a1b6088e260$var$setActive","liked1","map","category","filter","name","idx","arr","indexOf","sort","join","$64f36a1b6088e260$var$isDragging","btn1","remove","setItem","addEventListener","e","scrollLeft","movementX","evt","target","nodeName","$7b694fab0baf01ba$var$favoritesList","$7b694fab0baf01ba$var$favoritesPlug","$7b694fab0baf01ba$var$favImgElem","$7b694fab0baf01ba$export$5312ec80869db145","page","favoritesArr","window","matchMedia","matches","start","end","$7b694fab0baf01ba$export$56ea5d4c2d828e2e","selectedCategory","trim","toLowerCase","data","i","append","$ioLrG","DrawCard","StartScrollUp","$13v5H","startHeader","pageCount","Math","ceil","$8IduK","createPagination"],"version":3,"file":"favorites.be3c533f.js.map"}